[info]
sudo=jgg
otro=nada

[keys]
server1=keyserver.ubuntu.com
key1=E298A3A825C0D65DFD57CBB651716619E084DAB9
# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9

[repos]
repo1="deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/"
# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
# sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'

[linux]
apt="net-tools                  \
     git                        \
     dirmngr                    \
     gnupg                      \
     apt-transport-https        \
     ca-certificates            \
     nginx                      \
     software-properties-common"

get="libxml2-dev                \
     libfontconfig1-dev         \
     libudunits2-dev            \
     libssl-dev                 \
     libcurl4-openssl-dev       \
     libxt-dev libcairo2-dev    \
     libharfbuzz-dev            \
     libfribidi-dev             \
     libfreetype6-dev           \
     libpng-dev                 \
     libtiff5-dev               \
     libjpeg-dev                \
     libmariadb-dev-compat      \
     openssl                    \
     gdebi-core                 \
     wget                       "

[R]
url=https://download3.rstudio.org/ubuntu-14.04/x86_64/
shiny=shiny-server-1.5.17.973-amd64.deb

[R_system]
deps = "BH"
r6=R6
rest  = "promises future rvest RestRserve"
bit64=bit64
crayon=crayon
process=processx
ini =  "ini" #  RcppTOML
rlist=rlist
shiny = "shiny shinyjs"
tidy  = "dplyr plyr"  # plyr quitar
tools = "hash anytime"
DB="RMariaDB"
data = "zoo"
plot = "plotly gridExtra"
docs = "markdown"
parallel = "parallel doParallel"

[R_site]
tables = "reactable"
shiny = "shinydashboard shinydashboardPlus shinyBS shinyWidgets"
shiny2 = "shinycookie shinybusy"
shiny3 = "crosstalk"
[YATA]
base=/srv
repo=https://github.com/Grandez/YATA2.git
packages="Tools  DB  Providers  DT  Core REST WebCore"
pp=devtools::install_github("colearendt/shinycookie")
#global_library
#user_library
#library

# Esto se debe copiar al server pero no es un paquete
[R_copy]
ext=YATAExternal

# SciViewsPackages <- c("SciViews", "svMisc", "svSocket", "svGUI", "svIDE", "svKomodo", "svDialogs", "svSweave", "svTools", "svUnit", "svWidgets", "tcltk2") install.packages(SciViewsPackages)

# PKGxxx = YATAAnalytics
# PKGxxx = YATABook
# PKGxxx = YATACI
# PKGxxx = YATACI2
# PKGxxx = YATACLI
# PKGxxx = YATAConfig
# PKGxxx = YATAControl
# PKGxxx = YATADT
# PKGxxx = YATAExternal
# PKGxxx = YATAMan
# PKGxxx = YATAManual
# PKGxxx = YATAManualTech
# PKGxxx = YATAModels
# PKGxxx = YATAModels2
#
# PKGxxx = YATAPUT
# PKGxxx = YATAREST
# PKGxxx = YATASetup
# PKGxxx = YATAWebAdmin
# PKGxxx = YATAWebModels
# PKGxxx = YATAWebTheme
# PKGxxx = YATAWebTrade
# PKGxxx = YATAWebWidgets

[python]
# sudo apt install python3-configparser

pip = "libxml2-dev                \
     libfontconfig1-dev         \
     libudunits2-dev            \
     libssl-dev                 \
     libcurl4-openssl-dev       \
     libxt-dev libcairo2-dev    \
     libharfbuzz-dev            \
     libfribidi-dev             \
     libfreetype6-dev           \
     libpng-dev                 \
     libtiff5-dev               \
     libjpeg-dev                \
     libmariadb-dev-compat      \
     openssl                    \
     gdebi-core                 \
     wget                       "

# setup el primero por si se ha cambiado
[packages]
setup      = YATASetup
base       = YATABase
db         = YATADB
providers  = YATAProviders
core       = YATACore
batch      = YATABatch
rest       = YATAREST
models     = YATAModels
webshiny   = YATAWebShiny
webcore    = YATAWebCore
webtrade   = YATAWebTrade

[web]
trade      = yatashinytrade
admin      = yatashinyadmin
trade2     = YATAWebTrade2
